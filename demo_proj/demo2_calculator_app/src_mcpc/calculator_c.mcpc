// File: calculator_c.mpc





SYMBOL CURRENT_CALCULATOR_VALUE : Double // Holds the result of the last successful calculation
SYMBOL LAST_OPERATOR_USED : Character // Holds the last operator entered by the user


SYMBOL ERROR_CODE_SUCCESS : Integer = 0 // Indicates successful operation
SYMBOL ERROR_CODE_DIVISION_BY_ZERO : Integer = 1 // Indicates division by zero error
SYMBOL ERROR_CODE_INVALID_INPUT : Integer = 2 // Indicates invalid expression format
SYMBOL ERROR_CODE_UNKNOWN_ERROR : Integer = 99 // Generic error

SYMBOL ERROR_MSG_DIVISION_BY_ZERO : String = "Error: Division by zero." // Error message symbol
SYMBOL ERROR_MSG_INVALID_INPUT : String = "Error: Invalid input format." // Error message symbol
SYMBOL ERROR_MSG_UNKNOWN_ERROR : String = "Error: An unknown error occurred." // Error message symbol



PROCEDURE PARSE_EXPRESSION(InputString, OUT Operand1, OUT Operator, OUT Operand2, OUT IsContinuous):








PROCEDURE PERFORM_OPERATION(Operand1, Operator, Operand2, OUT Result, OUT Status):

  SWITCH Operator:
    CASE '+':
      SET Result = Operand1 + Operand2
      SET Status = SYMBOL ERROR_CODE_SUCCESS
    CASE '-':
      SET Result = Operand1 - Operand2
      SET Status = SYMBOL ERROR_CODE_SUCCESS
    CASE '*':
      SET Result = Operand1 * Operand2
      SET Status = SYMBOL ERROR_CODE_SUCCESS
    CASE '/':
      IF Operand2 IS EQUAL TO 0.0:
        SET Result = 0.0 // Or some indicator
        SET Status = SYMBOL ERROR_CODE_DIVISION_BY_ZERO
      ELSE:
        SET Result = Operand1 / Operand2
        SET Status = SYMBOL ERROR_CODE_SUCCESS
    DEFAULT:

      SET Result = 0.0
      SET Status = SYMBOL ERROR_CODE_INVALID_INPUT // Or a specific unknown op error



PROCEDURE PROCESS_EXPRESSION_FUNC(InputString, OUT ResultRef, OUT StatusRef):




  SYMBOL Op1, Op2 : Double
  SYMBOL OpChar : Character
  SYMBOL IsContinuousFlag : Boolean
  SYMBOL ParseStatus : Integer // Internal status for parsing


  CALL PARSE_EXPRESSION(InputString, Op1, OpChar, Op2, IsContinuousFlag, ParseStatus)

  IF ParseStatus IS NOT SYMBOL ERROR_CODE_SUCCESS:

    SET StatusRef = ParseStatus // Set the error status (e.g., ERROR_CODE_INVALID_INPUT)
    SET ResultRef = 0.0 // Set result to 0 on error
    RETURN // Exit the function


  SYMBOL FinalOp1, FinalOp2 : Double
  SYMBOL FinalOperator : Character

  IF IsContinuousFlag IS TRUE:
    SET FinalOp1 = SYMBOL CURRENT_CALCULATOR_VALUE // Use the last result as the first operand
    SET FinalOperator = OpChar // The operator from the continuous input
    SET FinalOp2 = Op1 // The number entered in continuous input
  ELSE:
    SET FinalOp1 = Op1 // First number from the expression
    SET FinalOperator = OpChar // The operator from the expression
    SET FinalOp2 = Op2 // Second number from the expression

    SET SYMBOL LAST_OPERATOR_USED = OpChar


  SYMBOL CalculationStatus : Integer
  SYMBOL CalculationResult : Double

  CALL PERFORM_OPERATION(FinalOp1, FinalOperator, FinalOp2, CalculationResult, CalculationStatus)


  SET StatusRef = CalculationStatus // Pass calculation status outwards
  SET ResultRef = CalculationResult // Pass calculation result outwards


  IF CalculationStatus IS EQUAL TO SYMBOL ERROR_CODE_SUCCESS:
    SET SYMBOL CURRENT_CALCULATOR_VALUE = CalculationResult
  ELSE:







